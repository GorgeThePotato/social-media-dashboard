{"version":3,"sources":["script.js"],"names":["darkButton","document","getElementById","lightButton","colorModeFromLocalStorage","localStorage","getItem","colorModeFromPreferences","window","matchMedia","matches","loadAndUpdateColor","click","radioButtons","querySelectorAll","forEach","button","addEventListener","event","checked","setDarkMode","setLightMode","querySelector","classList","setItem"],"mappings":"AAAA,aAAA,IAAMA,WAAaC,SAASC,eAAe,QACrCC,YAAcF,SAASC,eAAe,SAEtCE,0BAA4B,WAChC,OAAOC,aAAaC,QAAQ,YAC9B,EAEMC,yBAA2B,WAC7B,OAAOC,OAAOC,WAAW,gCAAgCC,QACvD,OACA,OACN,EAEMC,mBAAqB,WAGd,SADKP,6BAA+BG,4BAC3BP,WAAWY,QAAUT,YAAYS,OACvD,EAGMC,aAAeZ,SAASa,iBAAiB,0BAC/CD,aAAaE,SAAQ,SAAAC,GACjBA,EAAOC,iBAAiB,SAAS,SAACC,GAC9BlB,WAAWmB,QAAUC,cAAgBC,cACzC,GACJ,IAIAb,OAAOC,WAAW,gCACjBQ,iBAAiB,UAAU,SAACC,GACzBA,EAAMR,QAAUV,WAAWY,QAAUT,YAAYS,OACrD,IAEA,IAAMQ,YAAc,WAClBnB,SAASqB,cAAc,QAAQC,UAAY,OAC3ClB,aAAamB,QAAQ,YAAa,OACpC,EAEMH,aAAe,WACnBpB,SAASqB,cAAc,QAAQC,UAAY,QAC3ClB,aAAamB,QAAQ,YAAa,QACpC,EAEAb","file":"script.js","sourcesContent":["const darkButton = document.getElementById('dark');\r\nconst lightButton = document.getElementById('light');\r\n\r\nconst colorModeFromLocalStorage = () => {\r\n  return localStorage.getItem('colorMode');\r\n};\r\n\r\nconst colorModeFromPreferences = () => {\r\n    return window.matchMedia('(prefers-color-scheme: dark)').matches \r\n    ? 'dark'\r\n    : 'light' // If preference is set or does not match anything (light is default)\r\n};\r\n\r\nconst loadAndUpdateColor = () => {\r\n    // local storage has precendence over the prefers-color-scheme\r\n    const color = colorModeFromLocalStorage() || colorModeFromPreferences();\r\n    color == 'dark' ? darkButton.click() : lightButton.click();\r\n};\r\n\r\n// when the inputs are clicked, check which radio button is checked and change the color\r\nconst radioButtons = document.querySelectorAll('.toggle__wrapper input');\r\nradioButtons.forEach(button => {\r\n    button.addEventListener('click', (event) => {\r\n        darkButton.checked ? setDarkMode() : setLightMode();\r\n    });\r\n});\r\n\r\n// when the prefers-color-scheme changes, this event will be emitted\r\n// event reflects the media query, if it matches, the new color is dark, else it is light\r\nwindow.matchMedia('(prefers-color-scheme: dark)')\r\n.addEventListener('change', (event) => {\r\n    event.matches ? darkButton.click() : lightButton.click();\r\n});\r\n\r\nconst setDarkMode = () => {\r\n  document.querySelector('body').classList = 'dark';\r\n  localStorage.setItem('colorMode', 'dark');\r\n};\r\n\r\nconst setLightMode = () => {\r\n  document.querySelector('body').classList = 'light';\r\n  localStorage.setItem('colorMode', 'light');\r\n};\r\n// Load the right color on startup - localStorage has precedence\r\nloadAndUpdateColor();"]}